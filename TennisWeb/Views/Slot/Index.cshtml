@model List<TennisWeb.CF.Slot>
@{
    ViewBag.Title = "SlotsList";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<head>
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Assets/plugins/datatables-bs4/css/dataTables.bootstrap4.css" />
<link rel="stylesheet" href="~/Assets/plugins/datatables-responsive/css/responsive.bootstrap4.css" />
</head>
<div class="container-fluid">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid my-2">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Slots</h1>
                </div>
                <div class="col-sm-6 text-right">
                    <a href="@Url.Action("Create", "Slot")" class="btn btn-primary">New Slot</a>
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->
    </section>
    <section class="content">
        <div class="row justify-content-center">

            @if (!string.IsNullOrEmpty(TempData["msg"] as string))
            {
                <div class="col-md-4 col-sm-12">
                    <div class="alert alert-success text-center">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        @TempData["msg"]
                    </div>
                </div>
             }
                
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Slot List</h3>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <table id="slot_table" class="table table-bordered table-hover table-striped">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Name</th>
                                        <th>Start Time</th>
                                        <th>End Time</th>   
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Any())
                                    {
                                        foreach (var slot in Model)
                                        {
                                            <tr>
                                                <td>@slot.Id</td>
                                                <td>@slot.Name </td>
                                                <td>@slot.Start</td>
                                                <td>@slot.End</td>
                                                <td>  @(slot.Status ? "Active" : "Block")</td>
                                                <td class="text-center">
                                                    <a  data-slot-id="@slot.Id" href="#" class="edit-status">
                                                        Change Status
                                                    </a> ||
                                                    <a data-slot-id="@slot.Id" href="#" class="text-danger  w-6 h-6 mr-1 remove">
                                                        Delete
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr class="text-center">
                                            <td colspan="6">No slots Found</td>
                                        </tr>
                                    }

                                </tbody>

                            </table>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
        <!-- /.row -->
    </section>
</div>

<script src="~/Assets/plugins/datatables/jquery.dataTables.js"></script>
<script src="~/Assets/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
<script src="~/Assets/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    $(function () {
        $('#slot_table').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": true,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            "columnDefs": [
                { "orderable": true }
            ]
        });
    });

        $('.remove').on('click', function(event) {
            event.preventDefault();
            var slotId = parseInt($(this).data("slot-id"));
            console.log(slotId);
        Swal.fire({
            title: 'Are you sure?',
            text: 'Data related to this slot will be deleted.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {


            if (result.isConfirmed) {

                // Use proper string concatenation to replace updateId in the URL
                var url = '@Url.Action("Delete", "Slot", new { id = "PLACEHOLDER" })'.replace('PLACEHOLDER', slotId);
                window.location.href = url;
            }
        });






        });

    $('.edit-status').on('click', function(event) {
    event.preventDefault();


        Swal.fire({
            title: 'Change Status',
            text: 'Are you sure you want to change the status?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No'
        }).then((result) => {
            if (result.isConfirmed) {
                var slotId = parseInt($(this).data("slot-id"));
                 var url = '@Url.Action("ChangeStatus", "Slot", new { id = "PLACEHOLDER" })'.replace('PLACEHOLDER', slotId);
                $.ajax({
                    url: url, // Replace with the actual endpoint URL
                    type: 'get',
                    data: {
                        id: slotId
                    },
                    dataType: 'json',
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK',
                                allowOutsideClick: false
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            });
                        }
                    },
                    error: function (error) {
                        console.log(error);
                        Swal.fire({
                            title: 'Error!',
                            text: error.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            }
        });


});

</script>
