@model TennisWeb.CF.Match
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    <div class="row justify-content-center">

        <div class="col-md-4">
            <h2>Create Match</h2>
            @using (Html.BeginForm("Store", "Match", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
            {

                <div class="form-group">
                    @Html.LabelFor(model => model.Time)
                    <input type="date" id="Time" name="Time" class="form-control" required="required" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    <div class="invalid-feedback">Select Date.</div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SlotId)
                    <select id="SlotId" name="SlotId" class="form-control" required="required">
                        <option value="">-- Select Date First --</option>
                        
                    </select>
                    <div class="invalid-feedback">Select Slot.</div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CoachId)
                    <select id="CoachId" name="CoachId" class="form-control" required="required">
                        <option value="">-- Select Coach --</option>
                        
                    </select>
                    <div class="invalid-feedback">Select Coach</div>
                </div>



                <button type="submit" class="btn btn-primary">Submit</button>
            }
        </div>

        <div class="col-md-8">
            @if (!string.IsNullOrEmpty(TempData["msg"] as string))
            {
                <div class="col-md-4 col-sm-12">
                    <div class="alert alert-success text-center">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        @TempData["msg"]
                    </div>
                </div>
            }
        </div>
    </div>

</div>


<script>
            // Example of form validation using Bootstrap's native validation classes
            (function () {
                'use strict';

                var forms = document.querySelectorAll('.needs-validation');

                Array.prototype.slice.call(forms)
                    .forEach(function (form) {
                        form.addEventListener('submit', function (event) {
                            if (!form.checkValidity()) {
                                event.preventDefault();
                                event.stopPropagation();
                            }

                            form.classList.add('was-validated');
                        }, false);
                    });
    })();
    $(document).ready(function () {
        // Attach onchange event handler to the date input field
        $("#Time").on("change", function () {
            // Get the selected date from the input field
            var selectedDate = $(this).val();

            $.ajax({
                url: "/Match/GetBookedSlots",
                type: "GET",
                data: { date: selectedDate },
                dataType: "json",
                success: function (data) {
                    if (data.success) {
                        var selectElement = $("#SlotId");
                        selectElement.empty();

                        if (data.slots.length === 0) {
                            selectElement.append('<option value="">No slots available</option>');
                        } else {
                            selectElement.append('<option value="">-- Select Slot --</option>');

                            $.each(data.slots, function (index, slot) {
                                selectElement.append($('<option></option>').attr('value', slot.Id).text(slot.Name));
                            });
                        }
                    }
                    else {
                        console.log(data);
                    }

                },
                error: function (error) {
                    // Handle errors here
                    console.error(responseText); // Log the error to the console for debugging
                }
            });
        });






        // Assuming SlotId is the id of your select element
        $("#SlotId").on("change", function () {
            var selectedDate = $("#Time").val();
            var selectedValue = $(this).val();

            $.ajax({
                url: "/Match/GetFreeCoaches",
                type: "GET",
                data: {
                    date: selectedDate,
                    id: selectedValue
                },
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    if (data.success) {

                        var selectElement = $("#CoachId");
                        selectElement.empty();

                        if (data.coaches.length === 0) {
                            selectElement.append('<option value="">No coaches available</option>');
                        } else {
                            selectElement.append('<option value="">-- Select Coach --</option>');

                            $.each(data.coaches, function (index, coach) {
                                selectElement.append($('<option></option>').attr('value', coach.Id).text(coach.Name));
                            });
                        }

                    }
                    else {
                        console.log(data);
                    }

                },
                error: function (error) {
                   
                    console.error(responseText); // Log the error to the console for debugging
                }
            });
        });

    });

</script>
