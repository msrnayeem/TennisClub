@model List<TennisWeb.CF.CoachInfo>
@{
    ViewBag.Title = "Coach List";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<head>
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Assets/plugins/datatables-bs4/css/dataTables.bootstrap4.css" />
<link rel="stylesheet" href="~/Assets/plugins/datatables-responsive/css/responsive.bootstrap4.css" />
</head>
<div class="container-fluid">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid my-2">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Coaches</h1>
                </div>
                <div class="col-sm-6 text-right">
                    <a href="" class="btn btn-primary">New Coach</a>
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->
    </section>
    <section class="content">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Coach List</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <table id="coach_table" class="table table-bordered table-hover table-striped">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <td>Status</td>
                                    <td>Action</td>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    foreach (var coach in Model)
                                    {
                                        <tr>
                                            <td>@coach.Name</td>
                                            <td> @coach.User.Email </td>
                                            <td>@coach.User.Status</td>
                                            <td>
                                                <a class="change-status" href="#" data-edit-id="@coach.Id">
                                                    '<i class="fa fa-edit"></i>
                                                </a> ||
                                                <a class="delete" href="#" data-delete-id="@coach.Id">
                                                    <i class="fa fa-trash"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr class="text-center">
                                        <td colspan="4">No Coach Found</td>
                                    </tr>
                                }

                            </tbody>

                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
</div>

<script src="~/Assets/plugins/datatables/jquery.dataTables.js"></script>
<script src="~/Assets/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
<script src="~/Assets/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>

<script>
    $(function () {
        $('#coach_table').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": true,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            "columnDefs": [
                { "orderable": true }
            ]
        });
    });



    $('.delete').on('click', function(event) {
        event.preventDefault();

            var deleteId = parseInt($(this).data("delete-id"));
            
        Swal.fire({
            title: 'Delete Coach ?',
            text: 'All the information related to this coach will be deleted.',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No'
        }).then((result) => {
            if (result.isConfirmed) {

                var url = '@Url.Action("DeleteCoach", "Coach", new { id = "PLACEHOLDER" })'.replace('PLACEHOLDER', deleteId);
                $.ajax({
                    url: url, // Replace with the actual endpoint URL
                    type: 'get',
                    dataType: 'json',
                    success: function (response) {
                        
                        if (response.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK',
                                allowOutsideClick: false
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.reload();
                                }
                            });
                        }
                        else {
                            Swal.fire({
                                title: 'Error!',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK',
                                allowOutsideClick: false
                            });
                        }
                    },
                    error: function (error) {
                        console.log(error);
                        Swal.fire({
                            title: 'Error!',
                            text: error.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            }
        });

    });

    $('.change-status').on('click', function(event) {
        event.preventDefault();

        Swal.fire({
            title: 'Change Status ?',
            text: 'Are you sure you want to change status?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No'
        }).then((result) => {
            if (result.isConfirmed) {
                var editId = parseInt($(this).data("edit-id"));
                var url = '@Url.Action("ChangeStatus", "Coach", new { id = "PLACEHOLDER" })'.replace('PLACEHOLDER', editId);
                $.ajax({
                    url: url, // Replace with the actual endpoint URL
                    type: 'get',
                    dataType: 'json',
                    success: function (response) {

                        if (response.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK',
                                allowOutsideClick: false
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.reload();
                                }
                            });
                        }
                        else {
                            Swal.fire({
                                title: 'Error!',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK',
                                allowOutsideClick: false
                            });
                        }
                    },
                    error: function (error) {

                        Swal.fire({
                            title: 'Error!',
                            text: error.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            }
        });

    });



</script>


